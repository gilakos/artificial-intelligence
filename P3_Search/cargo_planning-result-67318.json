{
    "tests": [
        {
            "traceback": "AttributeError: 'NoneType' object has no attribute 'solution'\n",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem yields a correct solution when input to breadth_first_search",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "Action levels have the correct number of actions",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "Literal levels have the correct number of literals",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "competing_needs_mutex behaves correctly",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "inconsistent_effects_mutex behaves correctly",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "inconsistent_support_mutex behaves correctly",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "interference_mutex behaves correctly",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "negation_mutex behaves correctly",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "Serialization of mutexes is correct",
            "result": "E"
        },
        {
            "traceback": "IndexError: list index out of range\n",
            "rubric_item_id": "5519",
            "description": "levelsum heuristic behaves correctly",
            "result": "E"
        },
        {
            "traceback": "AssertionError: Incorrect actions.\n\nYour code did not generate all required actions, which means that you may have skipped some combinations of fluents, or there may be an error in the action name or argument names that prevents a literal match with the signature specified in the schema.  Carefully review your actions against the schema defined in the project README.\nMissing actions:\n   Load(C1, P1, SFO)\n   Load(C2, P2, JFK)\n   Fly(P2, JFK, SFO)\n   Fly(P1, SFO, JFK)\n",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem correctly lists possible actions in a given state",
            "result": "F"
        },
        {
            "traceback": "AssertionError: Lists differ: [] != ['At(C2, JFK)', 'At(P1, SFO)', 'At(P2, JFK)', 'In(C1, P1)']\n\nSecond list contains 4 additional elements.\nFirst extra element 0:\n'At(C2, JFK)'\n\n- []\n+ ['At(C2, JFK)', 'At(P1, SFO)', 'At(P2, JFK)', 'In(C1, P1)']\n",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem correctly updates state for a given action",
            "result": "F"
        },
        {
            "traceback": "AssertionError: 0 != 2\n",
            "rubric_item_id": "5519",
            "description": "AirCargoProblem implements the ignore preconditions heuristic",
            "result": "F"
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns the correct initial fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns the correct goal fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns an object of type problem",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns the correct initial values",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns the correct initial fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns the correct goal fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns an object of type problem",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns the correct initial values",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns the correct initial fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns the correct goal fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns an object of type problem",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns the correct initial values",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem correctly constructs all possible actions",
            "result": "."
        }
    ]
}